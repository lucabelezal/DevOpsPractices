default_platform(:ios)

platform :ios do
  workspace = "CSBootcamp.xcworkspace"
  project = "CSBootcamp.xcodeproj"
  scheme = ENV["SCHEME"]
  output_name = "#{ENV["ENV_NAME"]}.ipa"

  desc "Push a new beta build to Firebase App Distribution"
  lane :run_firebase_app_distribution do
    firebase_app_distribution(
      googleservice_info_plist_path: ENV["PATH_INFOPLIST"],
      firebase_cli_token: ENV['FIREBASE_TOKEN'],
      ipa_path: "./.fastlane/output/#{output_name}",
      testers: "lucabelezal@gmail.com",
      release_notes: "Lots of amazing new features to test out!",
      debug: true
    )
  end

  desc "Push a new beta build to Firebase App Distribution"
  lane :beta do
    build_number = increment_build_number()
    git_add
    git_commit(path: "*", message: "Increment new build number - #{build_number}")
    push_to_git_remote(force: true)

    scan
    gym
    run_firebase_app_distribution
  end

  desc "Run UI and Unit Tests"
  lane :run_tests_app do
    run_tests(
      workspace: $workspace,
      devices: ["iPhone 11"],
      reinstall_app: true,
      code_coverage: true,
      derived_data_path: "./DerivedData",
      scheme: $scheme
  )
  end

  desc "Build Only"
  lane :run_build_app do
    build_app(workspace: $workspace, scheme: $scheme, skip_codesigning: true, skip_archive: true)
  end

  desc "Generates screenshots"
  lane :run_snapshot do
    snapshot
  end

  desc "SwiftLint"
  lane :run_swiftlint do
    swiftlint(
      output_file:"./reports/swiftlint.json",
      reporter:"json" ,
      ignore_exit_status:"true"
    )
  end

  desc "Slather"
  lane :run_slather do
    slather(
      sonarqube_xml: true,
      build_directory: "./DerivedData",
      input_format: "profdata",
      output_directory: "./reports",
      binary_basename: $scheme,
      scheme: $scheme,
      proj: $project,
      workspace: $workspace
    )
  end
  
  desc "Codecov"
  lane :run_codecov_reporter do
    codecov_reporter(
      token: ENV["CODECOV_TOKEN"]
    )
  end

  desc "Code Quality and Security"
  lane :run_sonar do
    sonar(
      sonar_login: ENV["SONAR_TOKEN"],
      project_key: "lucabelezal_DevOpsPractices",
      sonar_organization: "skeleton",
      project_name: $scheme,
      sources_path: File.expand_path("../CSBootcamp"),
      sonar_url: "https://sonarcloud.io"
    )
  end
end


