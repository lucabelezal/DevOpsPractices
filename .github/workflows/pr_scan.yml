name: Scan PR
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    env:
      sonarToken: ${{ secrets.SONAR_TOKEN }}
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6.3

    - name: Install Tools
      run: |
          set -o pipefail
          brew install sonar-scanner
          brew install swiftlint
          gem install bundler:2.1.4
          bundle install

    - name: Check Dependencie Cache
      uses: actions/cache@v1
      id: pods-cache
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}

    - name: Install Dependencies
      if: steps.pods-cache.outputs.cache-hit != 'true'
      run: |
        bundle exec pod install
      env:
         GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and test
      run: |
        xcodebuild -version
        xcodebuild build test -xcworkspace "${xcworkspace}" -scheme "${scheme}" ${params} -destination "${destination}" | xcpretty && exit ${PIPESTATUS[0]}
      env:
        xcworkspace: 'CSBootcamp.xcworkspace'
        params: '-derivedDataPath ./DerivedData -enableCodeCoverage YES'
        scheme: 'CSBootcamp'
        destination: 'name=iPhone 11'
        DEVELOPER_DIR: ${{ matrix.xcode }}

    - name: Slather
      run: |
        slather coverage --sonarqube-xml ${params} ${xcworkspace}
      env:
        xcworkspace: 'CSBootcamp.xcworkspace'
        params: '--build-directory ./DerivedData
        --output-directory ./reports
        --scheme CSBootcamp
        --binary-basename CSBootcamp'

    - name: SwiftLint
      run: |
        fastlane run swiftlint output_file:"./reports/swiftlint.json" reporter:"json" ignore_exit_status:"true"

    - name: Run Sonar
      if: ${{ env.sonarToken != 0 }}
      run: |
        sonar-scanner -X -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
