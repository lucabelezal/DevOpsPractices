name: CI
on:
  push:
    branches: 
      - master
      - develop
  # pull_request:
  #   types: [opened, synchronize, reopened]
  #   branches:
  #     - master
  #     - develop
  #     - feature/*
  #     - hotfix/*
  #     - bugfix/*
  #     - fix/*
jobs:
  build:
    name: Run Build and Unit Tests
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.3

      - name: Cache Ruby Gem
        uses: actions/cache@v2
        id: bundle-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Cache CocoaPods
        uses: actions/cache@v2
        id: pods-cache
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Dependencies
        run: |
          set -o pipefail
          brew install sonar-scanner
          brew install swiftlint
          gem install bundler:2.1.4
          bundle install
          bundle exec pod install

      - name: Run SwiftLint
        if: steps.bundle-cache.outputs.cache-hit != 'true' || steps.pods-cache.outputs.cache-hit != 'true'
        run: |
          set -o pipefail
          bundle exec fastlane run_swiftlint

      - name: Run Build
        run: |
          set -o pipefail
          bundle exec fastlane run_build_app

      - name: Run Tests
        run: |
          set -o pipefail
          bundle exec fastlane run_tests_app
    
      - name: Run Slather
        run: |
          set -o pipefail
          bundle exec fastlane run_slather

      - name: Send to Codecov
        if: github.ref == 'refs/heads/develop'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./reports/cobertura.xml

      - name: Send Reports to Sonar
        run: |
          sonar-scanner -X -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}