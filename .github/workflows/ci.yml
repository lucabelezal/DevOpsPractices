name: CI

on:
  push:
    branches: 
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
      - feature/*
      - hotfix/*
      - bugfix/*

jobs:

  # build:
  #   name: Run Build
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: 2.6.3
  #     - name: Install Dependencies
  #       run: |
  #         bundle install
  #         bundle exec pod install
  #     - name: Xcode Build
  #       run: |
  #         set -o pipefail xcodebuild build -workspace CsBootcamp.xcworkspace -scheme 'CsBootcamp' CODE_SIGNING_ALLOWED=NO | xcpretty

  # test:
  #   name: Run Tests
  #   needs: build
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #     - name: Fetch all branches
  #       run: |
  #         git fetch --prune --unshallow
  #     - name: Run Tests
  #       run: |
  #         set -o pipefail
  #         gem install bundler:2.1.4
  #         bundle install
  #         bundle exec pod install
  #         bundle exec fastlane tests

  sonar:
    # needs: [build, test]
    name: SonarCloud
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Install Dependencies
      run: |
        brew install sonar-scanner
        brew install swiftlint
        bundle install
        bundle exec pod install
        bundle exec fastlane tests
              
    - name: Run Build and Test
      env:
        project: 'CsBootcamp.xcodeproj'
        params: '-derivedDataPath ./DerivedData -enableCodeCoverage YES'
        scheme: CsBootcamp
        destination: 'name=iPhone 11'
      run: |
        xcodebuild build test -workspace CsBootcamp.xcworkspace -scheme "${scheme}" -destination "${destination}" ${params} | xcpretty && exit ${PIPESTATUS[0]}
                
    - name: Run Slather Coverage
      env:
        project: 'CsBootcamp.xcodeproj'
        params: '--build-directory ./DerivedData
        --output-directory ./reports
        --scheme CsBootcamp
        --binary-basename CsBootcamp'
      run: |
        slather coverage --sonarqube-xml ${params} ${project}
    
    - name: Send Code Coverage to Codecov
      if: github.ref == 'refs/heads/develop'
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./reports/cobertura.xml

    - name: Run SwiftLint
      run: |
        fastlane run swiftlint output_file:"./reports/swiftlint.json" reporter:"json" ignore_exit_status:"true"
        
    - name: Send Reports to Sonar
      run: |
        sonar-scanner -X -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
